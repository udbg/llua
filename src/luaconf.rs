/* automatically generated by rust-bindgen */

pub const _VCRT_COMPILER_PREPROCESSOR: u32 = 1;
pub const _SAL_VERSION: u32 = 20;
pub const __SAL_H_VERSION: u32 = 180000000;
pub const _USE_DECLSPECS_FOR_SAL: u32 = 0;
pub const _USE_ATTRIBUTES_FOR_SAL: u32 = 0;
pub const _CRT_PACKING: u32 = 8;
pub const _HAS_EXCEPTIONS: u32 = 1;
pub const _STL_LANG: u32 = 0;
pub const _HAS_CXX17: u32 = 0;
pub const _HAS_CXX20: u32 = 0;
pub const _HAS_NODISCARD: u32 = 0;
pub const CHAR_BIT: u32 = 8;
pub const SCHAR_MIN: i32 = -128;
pub const SCHAR_MAX: u32 = 127;
pub const UCHAR_MAX: u32 = 255;
pub const CHAR_MIN: i32 = -128;
pub const CHAR_MAX: u32 = 127;
pub const MB_LEN_MAX: u32 = 5;
pub const SHRT_MIN: i32 = -32768;
pub const SHRT_MAX: u32 = 32767;
pub const USHRT_MAX: u32 = 65535;
pub const INT_MIN: i32 = -2147483648;
pub const INT_MAX: u32 = 2147483647;
pub const UINT_MAX: u32 = 4294967295;
pub const LONG_MIN: i32 = -2147483648;
pub const LONG_MAX: u32 = 2147483647;
pub const ULONG_MAX: u32 = 4294967295;
pub const LUAI_MAXCSTACK: u32 = 2000;
pub const LUA_INT_INT: u32 = 1;
pub const LUA_INT_LONG: u32 = 2;
pub const LUA_INT_LONGLONG: u32 = 3;
pub const LUA_FLOAT_FLOAT: u32 = 1;
pub const LUA_FLOAT_DOUBLE: u32 = 2;
pub const LUA_FLOAT_LONGDOUBLE: u32 = 3;
pub const LUA_INT_TYPE: u32 = 3;
pub const LUA_FLOAT_TYPE: u32 = 2;
pub const LUA_PATH_SEP: &'static [u8; 2usize] = b";\0";
pub const LUA_PATH_MARK: &'static [u8; 2usize] = b"?\0";
pub const LUA_EXEC_DIR: &'static [u8; 2usize] = b"!\0";
pub const LUA_LDIR: &'static [u8; 7usize] = b"!\\lua\\\0";
pub const LUA_CDIR: &'static [u8; 3usize] = b"!\\\0";
pub const LUA_DIRSEP: &'static [u8; 2usize] = b"\\\0";
pub const LUA_NUMBER_FRMLEN: &'static [u8; 1usize] = b"\0";
pub const LUA_NUMBER_FMT: &'static [u8; 6usize] = b"%.14g\0";
pub const LUA_INTEGER_FRMLEN: &'static [u8; 3usize] = b"ll\0";
pub const LUAI_MAXSTACK: u32 = 1000000;
pub const LUA_IDSIZE: u32 = 60;
#[cfg(feature = "std")]
pub type va_list = *mut ::std::os::raw::c_char;
#[cfg(not(feature = "std"))]
pub type va_list = *mut u8;
extern "C" {
    pub fn __va_start(arg1: *mut va_list, ...);
}
pub type __vcrt_bool = bool;
// pub type wchar_t = ::std::os::raw::c_ushort;
extern "C" {
    pub fn __security_init_cookie();
}
extern "C" {
    pub fn __security_check_cookie(_StackCookie: usize);
}
extern "C" {
    pub fn __report_gsfailure(_StackCookie: usize);
}
extern "C" {
    pub static mut __security_cookie: usize;
}
pub type max_align_t = f64;
